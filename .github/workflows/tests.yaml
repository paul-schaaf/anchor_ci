name: Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
env: 
  SOLANA_CLI_VERSION: 1.8.0
  NODE_VERSION: 17.0.1

jobs:
  test-core:
    name: Core Tests
    runs-on: ubuntu-18.04
    steps:
      - run: rustup component add rustfmt clippy
      - run: echo "ANCHOR_VERSION=$(cat ./VERSION)" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - run: git submodule update --init --recursive
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: sudo apt-get install -y pkg-config build-essential libudev-dev
      - uses: actions/cache@v2
        name: Cache Cargo registry + index
        id: cache-anchor
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ./target/
          key: cargo-${{ runner.os }}-core-tests-${{ hashFiles('**/Cargo.lock') }}
      - run: cargo build
      - run: cargo fmt -- --check
      - run: cargo clippy --all-targets -- -D warnings
      - run: cargo test
      - run: pushd ts && yarn && popd
      - run: pushd ts && yarn test && popd
      - run: pushd ts && yarn lint && popd

  setup-anchor-cli:
    name: Setup Anchor cli
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - run: sudo apt-get install -y pkg-config build-essential libudev-dev
      - uses: ./.github/actions/setup-solana/
      - uses: actions/cache@v2
        name: Cache Cargo registry + index
        id: cache-anchor
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ./target/
          key: cargo-${{ runner.os }}-v0000-${{ hashFiles('**/Cargo.lock') }}
      - run: cargo install --path cli anchor-cli --locked --force
      - uses: actions/upload-artifact@v2
        with:
          name: anchor-binary
          path: ~/.cargo/bin/anchor

  setup-client-example:
    needs: setup-anchor-cli
    name: Setup Client Example Test
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        node:
          - path: tests/events/
            name: events.so
          - path: examples/tutorial/basic-4/
            name: basic_4.so
          - path: examples/tutorial/basic-2/
            name: basic_2.so
          - path: tests/composite/
            name: composite.so
    steps:
      - uses: actions/checkout@v2
      - run: git submodule update --init --recursive
      - run: sudo apt-get install -y pkg-config build-essential libudev-dev

      - uses: ./.github/actions/setup-solana/

      - uses: actions/download-artifact@v2
        with:
          name: anchor-binary
          path: ~/.cargo/bin/
      - run: chmod +rwx ~/.cargo/bin/anchor
      - run: pushd ${{ matrix.node.path }} && anchor build && popd
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.node.name }}
          path: ${{ matrix.node.path }}target/deploy/${{ matrix.node.name }}
  
  test-client-example:
    needs: setup-client-example
    name: Client Example Test
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - run: sudo apt-get install -y pkg-config build-essential libudev-dev
      - run: echo "ANCHOR_VERSION=$(cat ./VERSION)" >> $GITHUB_ENV
      - run: git submodule update --init --recursive
      - uses: actions/download-artifact@v2
        with:
          name: anchor-binary
          path: ~/.cargo/bin/
      - uses: actions/download-artifact@v2
        with:
          name: events.so
          path: tests/events/target/deploy/
      - uses: actions/download-artifact@v2
        with:
          name: basic_4.so
          path: examples/tutorial/basic-4/target/deploy/
      - uses: actions/download-artifact@v2
        with:
          name: basic_2.so
          path: examples/tutorial/basic-2/target/deploy/
      - uses: actions/download-artifact@v2
        with:
          name: composite.so
          path: tests/composite/target/deploy/
      - uses: actions/cache@v2
        name: Cache client/example target
        id: cache-test-target
        with:
          path: client/example/target
          key: cargo-${{ runner.os }}-v0000-client/example-${{ env.ANCHOR_VERSION }}
      - uses: ./.github/actions/setup-solana/
      - run: pushd client/example && ./run-test.sh && popd

  test-programs:
    needs: setup-anchor-cli
    name: Test ${{ matrix.node.path }}
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        node:
          - cmd: pushd tests/sysvars && anchor test && popd
            path: tests/sysvars
          - cmd: pushd tests/composite && anchor test && popd
            path: tests/composite
          - cmd: pushd tests/errors && anchor test && popd
            path: tests/errors
          - cmd: pushd tests/spl/token-proxy && anchor test && popd
            path: spl/token-proxy
          - cmd: pushd tests/multisig && anchor test && popd
            path: tests/multisig
          - cmd: pushd tests/interface && anchor test && popd
            path: tests/interface
          - cmd: pushd tests/lockup && anchor test && popd
            path: tests/lockup
          - cmd: pushd tests/permissioned-markets/deps/serum-dex/dex && cargo build-bpf && cd ../../../ && anchor test && popd
            path: tests/permissioned-markets
          - cmd: pushd tests/swap/deps/serum-dex/dex && cargo build-bpf && cd ../../../ && anchor test && popd
            path: tests/swap
          - cmd: pushd tests/escrow && anchor test && popd
            path: tests/escrow
          - cmd: pushd tests/pyth && anchor test && popd
            path: tests/pyth
          - cmd: pushd tests/system-accounts && anchor test && popd
            path: tests/system-accounts
          - cmd: pushd tests/misc && anchor test && popd
            path: tests/misc
          - cmd: pushd tests/events && anchor test && popd
            path: tests/events
          - cmd: pushd tests/cashiers-check && anchor test && popd
            path: tests/cashiers-check
          - cmd: pushd tests/typescript && anchor test && popd
            path: tests/typescript
          - cmd: pushd tests/zero-copy && anchor test && popd
            path: tests/zero-copy
          - cmd: pushd tests/chat && anchor test && popd
            path: tests/chat
          - cmd: pushd tests/ido-pool && anchor test && popd
            path: tests/ido-pool
          - cmd: pushd tests/cfo && anchor run test-with-build && popd
            path: tests/cfo
    steps:
      - uses: actions/checkout@v2
      - run: echo "ANCHOR_VERSION=$(cat ./VERSION)" >> $GITHUB_ENV
      - run: git submodule update --init --recursive

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - run: rustup component add rustfmt clippy
      - run: sudo apt-get install -y pkg-config build-essential libudev-dev
      - uses: actions/cache@v2
        name: Cache Typescript node_modules
        id: cache-typescript
        with:
          path: |
            ./ts/node_modules
          key: solana-${{ runner.os }}-v0000-${{ env.NODE_VERSION }}-${{ hashFiles('**/yarn.lock') }}
      - run: cd ts && yarn && yarn build && yarn link && cd ../
      - run: cd examples/tutorial && yarn link @project-serum/anchor && yarn && cd ../../
      - run: cd tests && yarn link @project-serum/anchor && yarn && cd ..
      - run: sudo apt-get install -y pkg-config build-essential libudev-dev
      
      - uses: ./.github/actions/setup-solana/

      - uses: actions/cache@v2
        name: Cache Cargo registry + index
        id: cache-anchor
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ./target/
          key: cargo-${{ runner.os }}-v0000-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions/download-artifact@v2
        with:
          name: anchor-binary
          path: ~/.cargo/bin/

      - uses: actions/cache@v2
        name: Cache ${{ matrix.node.path }} target
        id: cache-test-target
        with:
          path: ${{ matrix.node.path }}/target
          key: cargo-${{ runner.os }}-v0000-${{ matrix.node.path }}-${{ env.ANCHOR_VERSION }}
      
      - run: ${{ matrix.node.cmd }}
        name: ${{ matrix.node.path }} program test
